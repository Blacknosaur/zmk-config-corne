#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
    behaviors {
        hml: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 13 14 15 16>;
        };

        hrr: hrr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <41 40 39 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 22 21 20 19>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <4 3>;
            bindings = <&kp TAB>;
        };

        rekey {
            bindings = <&key_repeat>;
            key-positions = <16 19>;
        };

        htmlopen {
            bindings = <&htmlel>;
            key-positions = <13 22>;
        };

        afunc {
            bindings = <&afunc>;
            key-positions = <14 21>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <1 3>;
        };
    };

    macros {
        mac_screenshot: mac_screenshot {
            label = "MAC_SCREENSHOT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LEFT_CONTROL &kp LCMD>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_CONTROL &kp LCMD>;
        };

        afunc: afunc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp EQUAL &kp GREATER_THAN &kp LEFT_BRACE &kp LS(RIGHT_BRACE) &kp LEFT>;
            label = "AF";
        };

        htmlel: htmlel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
            label = "HTML";
        };

        htmlelclose: htmlelclose {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp SLASH &kp GREATER_THAN &kp LEFT>;
            label = "HTMLELCLOSE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q          &kp W         &kp E        &kp R        &kp T          &kp Y        &kp U            &kp I                   &kp O                  &kp P             &none
&none  &hml LSHIFT A  &hml LCTRL S  &hml LALT D  &hml LGUI F  &kp G          &kp H        &hrr RGUI J      &hrr RALT K             &hrr RCTRL L           &hrr RSHIFT SEMI  &none
&none  &kp Z          &kp X         &kp C        &kp V        &kp B          &kp N        &kp M            &mt SINGLE_QUOTE COMMA  &mt DOUBLE_QUOTES DOT  &kp SLASH         &none
                                    &kp ESC      &lt 3 TAB    &lt 1 SPACE    &lt 1 ENTER  &lt 2 BACKSPACE  &kp ESCAPE
            >;
        };

        lower_layer {
            bindings = <
&none  &kp EXCL  &kp AT    &kp HASH  &kp DLLR        &kp PRCNT           &kp CARET  &kp AMPS   &kp STAR   &kp LPAR  &kp RPAR  &none
&none  &kp N1    &kp N2    &kp N3    &kp N4          &kp N5              &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &none
&none  &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT        &kp SINGLE_QUOTE    &kp MINUS  &kp EQUAL  &kp UNDER  &kp PLUS  &kp PIPE  &none
                           &trans    &kp LEFT_SHIFT  &none               &none      &kp BSPC   &mo 3
            >;
        };

        raise_layer {
            bindings = <
&none  &kp GRAVE       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &none         &none    &kp COLON  &kp MINUS       &kp UNDER     &none            &none  &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT       &kp LEFT_GUI  &none    &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&none  &kp DELETE      &none             &none              &none         &none    &none      &none           &none         &none            &none  &none
                                         &trans             &trans        &none    &trans     &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC  &kp C_VOL_DN   &kp C_VOL_UP           &kp K_MUTE                   &none  &none   &bt BT_NXT  &bt BT_SEL 0  &bt BT_CLR      &none
&none  &kp LG(GRAVE)           &mac_screenshot       &kp LG(PLUS)   &kp LG(LEFT_BRACKET)   &kp LS(LG(RIGHT_BRACKET))    &none  &afunc  &htmlel     &htmlelclose  &none           &none
&none  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT))     &kp LG(MINUS)  &kp LG(RIGHT_BRACKET)  &kp LS(LG(LEFT_BRACKET))     &none  &none   &none       &none         &studio_unlock  &none
                                                     &trans         &none                  &none                        &none  &none   &trans
            >;
        };
    };
};
