#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
    behaviors {
        hml: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 13 14 15 16>;
        };

        hrr: hrr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <41 40 39 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 22 21 20 19>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <4 3>;
            bindings = <&kp TAB>;
        };

        rekey {
            bindings = <&key_repeat>;
            key-positions = <16 19>;
        };

        htmlopen {
            bindings = <&htmlel>;
            key-positions = <13 22>;
        };

        afunc {
            bindings = <&afunc>;
            key-positions = <14 21>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <1 3>;
        };

        unlock {
            bindings = <&studio_unlock>;
            key-positions = <1 2 3>;
        };

        eqobj {
            bindings = <&eqobject>;
            key-positions = <30 31>;
        };

        eqstr {
            bindings = <&eqstring>;
            key-positions = <32 31>;
        };

        dquote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <6 7>;
        };

        squote {
            bindings = <&kp SQT>;
            key-positions = <7 8>;
        };

        gve {
            bindings = <&kp GRAVE>;
            key-positions = <8 9>;
        };

        eqaff {
            bindings = <&eqarr>;
            key-positions = <32 33>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <25 26>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
        };
    };

    macros {
        mac_screenshot: mac_screenshot {
            label = "MAC_SCREENSHOT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LEFT_CONTROL &kp LCMD>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_CONTROL &kp LCMD>;
        };

        afunc: afunc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp EQUAL &kp GREATER_THAN &kp LEFT_BRACE &kp LS(RIGHT_BRACE) &kp LEFT>;
            label = "AF";
        };

        htmlel: htmlel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
            label = "HTML";
        };

        htmlelclose: htmlelclose {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp SLASH &kp GREATER_THAN &kp LEFT>;
            label = "HTMLELCLOSE";
        };

        eqobject: eqobject {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "EQOBJECT";
        };

        eqstring: eqstring {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "EQSTRING";
        };

        eqarr: eq_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "EQ_BRACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q          &kp W         &kp E             &kp R        &kp T          &kp Y        &kp U            &kp I        &kp O         &kp P             &none
&none  &hml LSHIFT A  &hml LCTRL S  &hml LALT D       &hml LGUI F  &kp G          &kp H        &hrr RGUI J      &hrr RALT K  &hrr RCTRL L  &hrr RSHIFT SEMI  &none
&none  &kp Z          &kp X         &kp C             &kp V        &kp B          &kp N        &kp M            &kp COMMA    &kp DOT       &kp SLASH         &none
                                    &mt SPACE ESCAPE  &lt 3 TAB    &lt 1 SPACE    &lt 1 ENTER  &lt 2 BACKSPACE  &kp DEL
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCLAMATION          &kp GRAVE    &kp N1  &kp N2  &kp N3    &kp MINUS  &kp PLUS    &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS         &trans
&trans  &hrr LEFT_SHIFT AT_SIGN  &kp HASH     &kp N4  &kp N5  &kp N6    &kp UNDER  &kp PIPE    &kp AMPERSAND  &kp LEFT_BRACE        &hrr RIGHT_SHIFT RIGHT_BRACE  &trans
&trans  &kp DOLLAR               &kp PERCENT  &kp N7  &kp N8  &kp N9    &kp CARET  &kp DOLLAR  &kp ASTERISK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET             &none
                                              &kp J   &kp K   &kp N0    &kp COLON  &trans      &kp PERIOD
            >;
        };

        raise_layer {
            bindings = <
&none  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &none            &kp LG(X)  &kp LG(C)       &kp LG(V)      &kp LG(Z)        &kp LG(LS(Z))  &none
&none  &kp LEFT_SHIFT        &kp LEFT_CONTROL       &kp LEFT_ALT              &kp LEFT_GUI               &none            &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp LG(SPACE)  &none
&none  &none                 &none                  &none                     &none                      &none            &none      &kp PAGE_DOWN   &kp PAGE_DOWN  &none            &kp LG(LA(V))  &none
                                                    &trans                    &trans                     &kp LG(GRAVE)    &trans     &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC  &kp C_VOL_DN              &kp C_VOL_UP               &kp K_MUTE       &none             &bt BT_SEL 3       &bt BT_SEL 1     &bt BT_SEL 0    &none           &none
&none  &kp LG(GRAVE)           &mac_screenshot       &kp LG(LEFT_BRACKET)      &kp LG(RIGHT_BRACKET)      &kp LG(PLUS)     &none             &bl BL_OFF         &rgb_ug RGB_OFF  &bt BT_CLR_ALL  &none           &none
&none  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT))     &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(MINUS)    &ext_power EP_ON  &ext_power EP_OFF  &out OUT_BLE     &out OUT_USB    &studio_unlock  &none
                                                     &kp LA(LC(ENTER))         &none                      &none            &mkp LCLK         &mkp MB2           &mkp MCLK
            >;
        };

        lower_layer {
            bindings = <
&none  &kp EXCL  &kp AT    &kp HASH  &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR   &kp LPAR  &kp RPAR  &none
&none  &kp N1    &kp N2    &kp N3    &kp N4          &kp N5       &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &none
&none  &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT        &kp GRAVE    &kp MINUS  &kp EQUAL  &kp UNDER  &kp PLUS  &kp PIPE  &none
                           &trans    &kp LEFT_SHIFT  &none        &none      &kp BSPC   &mo 3
            >;
        };
    };
};
